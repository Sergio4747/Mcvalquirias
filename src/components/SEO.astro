---
type PerformanceLink = {
  rel: "dns-prefetch" | "preconnect" | "preload";
  href: string;
  as?: string;
  crossorigin?: boolean;
};

export interface Props {
  title: string;
  description: string;
  image?: string;
  noindex?: boolean;
  nofollow?: boolean;
  structuredData?: Record<string, any>;
  imageAlt?: string;
  twitterSite?: string;
  locale?: string;
  themeColor?: string;

  alternates?: { href: string; hreflang: string }[];
  performanceLinks?: PerformanceLink[];
  isArticle?: boolean;
  articleMeta?: {
    publishedTime: string;
    author?: string;
    tags?: string[];
  };
  rssURL?: string;
  verificationCodes?: { name: string; content: string }[];
}

const {
  title, description, image, noindex, nofollow, structuredData, imageAlt,
  twitterSite, locale, themeColor, alternates, performanceLinks,
  isArticle, articleMeta, rssURL, verificationCodes
} = Astro.props;

const siteName = "MC VALQUIRIAS";
const fullTitle = `${title} | ${siteName}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(image || "/img/pagina-inicio.png", Astro.site);
const ogType = isArticle ? "article" : "website";

const robotsContent = [ noindex && "noindex", nofollow && "nofollow", !noindex && "index", !nofollow && "follow" ].filter(Boolean).join(", ");
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<title>{fullTitle}</title>
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />
<meta name="robots" content={robotsContent} />
<meta name="googlebot" content={robotsContent} />

{alternates?.map(({ href, hreflang }) => <link rel="alternate" href={new URL(href, Astro.site)} hreflang={hreflang} />)}

{performanceLinks?.map(link => <link rel={link.rel} href={link.href} as={link.as} crossorigin={link.crossorigin ? '' : undefined} />)}

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={socialImageURL} />
<meta property="og:image:alt" content={imageAlt || ""} />
<meta property="og:site_name" content={siteName} />
<meta property="og:type" content={ogType} />
<meta property="og:locale" content={locale || "es_AR"} />

{isArticle && articleMeta && (
  <>
    <meta property="article:published_time" content={articleMeta.publishedTime} />
    {articleMeta.author && <meta property="article:author" content={articleMeta.author} />}
    {articleMeta.tags?.map(tag => <meta property="article:tag" content={tag} />)}
  </>
)}

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={socialImageURL} />
<meta name="twitter:image:alt" content={imageAlt || ""} />
<meta name="twitter:site" content={twitterSite} />

<meta name="theme-color" content={themeColor} />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" sizes="180x180" />
{rssURL && <link rel="alternate" type="application/rss+xml" title="RSS Feed" href={new URL(rssURL, Astro.site)} />}
{verificationCodes?.map(({ name, content }) => <meta name={name} content={content} />)}

{structuredData && <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />}