---
import HeroLayout from "../layouts/HeroLayout.astro";
import Servicios from "../pages/servicios.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

const { title, description, canonical } = Astro.props;
const siteName = "Valquirias Estética";
const siteURL = "https://www.mcvalquirias.com";
const logoURL = `${siteURL}/img/og-image.jpg`;
const twitterHandle = "@valquiriasestetica";
---

<HeroLayout
  title="Valquirias Estética - Centro de Belleza en Recoleta | Lifting Pestañas, Manicura"
  description="Descubre nuestros servicios de belleza en Valquirias Estética. Expertas en lifting de pestañas, manicura semipermanente y perfilado de cejas en Recoleta. ¡Reserva tu turno!"
>
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover"
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <link rel="icon" href="/img/logoimg.png" type="image/png" />
    <link rel="apple-touch-icon" href="/img/logoimg.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/img/logoimg.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/img/logoimg.png" />

    <title>
      Valquirias Estética - Centro de Belleza en Recoleta | Lifting Pestañas,
      Manicura
    </title>
    <meta
      name="description"
      content="Descubre nuestros servicios de belleza en Valquirias Estética. Expertas en lifting de pestañas, manicura semipermanente y perfilado de cejas en Recoleta. ¡Reserva tu turno!"
    />
    <meta
      name="keywords"
      content="estética, belleza, lifting pestañas, manicura semipermanente, perfilado cejas, centro belleza, Recoleta, Buenos Aires, estética profesional, uñas, pestañas, cejas"
    />
    <meta name="author" content="Valquirias Estética" />
    <meta
      name="robots"
      content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
    />
    <meta name="googlebot" content="index, follow" />

    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://www.mcvalquirias.com/" />
    <meta
      property="og:title"
      content="Valquirias Estética - Centro de Belleza en Recoleta"
    />
    <meta
      property="og:description"
      content="Expertas en lifting de pestañas, manicura semipermanente y perfilado de cejas en Recoleta. ¡Reserva tu turno!"
    />
    <meta
      property="og:image"
      content="https://www.mcvalquirias.com/img/logoimg.png"
    />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:locale" content="es_AR" />
    <meta property="og:site_name" content="Valquirias Estética" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://www.mcvalquirias.com/" />
    <meta
      property="twitter:title"
      content="Valquirias Estética - Centro de Belleza en Recoleta"
    />
    <meta
      property="twitter:description"
      content="Expertas en lifting de pestañas, manicura semipermanente y perfilado de cejas en Recoleta. ¡Reserva tu turno!"
    />
    <meta
      property="twitter:image"
      content="https://www.mcvalquirias.com/img/logoimg.png"
    />

    <link rel="canonical" href="https://www.mcvalquirias.com/" />

    <link rel="preload" href="/video/herovid.mp4" as="video" type="video/mp4" />

    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />

    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "BeautySalon",
        "name": "Valquirias Estética",
        "description": "Centro de belleza especializado en lifting de pestañas, manicura semipermanente y perfilado de cejas",
        "url": "https://www.mcvalquirias.com",
        "logo": "https://www.mcvalquirias.com/img/logoimg.png",
        "image": "https://www.mcvalquirias.com/img/logoimg.png",
        "address": {
          "@type": "PostalAddress",
          "addressLocality": "Recoleta",
          "addressRegion": "Buenos Aires",
          "addressCountry": "AR"
        },
        "serviceArea": {
          "@type": "GeoCircle",
          "geoMidpoint": {
            "@type": "GeoCoordinates",
            "latitude": -34.5875,
            "longitude": -58.3974
          },
          "geoRadius": "10000"
        },
        "hasOfferCatalog": {
          "@type": "OfferCatalog",
          "name": "Servicios de Belleza",
          "itemListElement": [
            {
              "@type": "Offer",
              "itemOffered": {
                "@type": "Service",
                "name": "Lifting de Pestañas",
                "description": "Tratamiento profesional para realzar pestañas naturalmente"
              }
            },
            {
              "@type": "Offer",
              "itemOffered": {
                "@type": "Service",
                "name": "Manicura Semipermanente",
                "description": "Manicura duradera con esmalte de larga duración"
              }
            },
            {
              "@type": "Offer",
              "itemOffered": {
                "@type": "Service",
                "name": "Perfilado de Cejas",
                "description": "Diseño y perfilado profesional de cejas"
              }
            }
          ]
        },
        "sameAs": [
          "https://www.instagram.com/valquiriasestetica",
          "https://www.facebook.com/valquiriasestetica"
        ]
      }
    </script>
  </head>

  <section class="hero" id="hero">
    <video
      class="background-video"
      autoplay
      muted
      loop
      playsinline
      preload="metadata"
      poster="/img/hero-poster.jpg"
    >
      <source src="/video/herovid.mp4" type="video/mp4" />
      <source src="/video/herovid.webm" type="video/webm" />
      Tu navegador no soporta video HTML5.
    </video>

    <div class="particles" aria-hidden="true" role="presentation">
      {
        Array.from({ length: 6 }).map((_, i) => (
          <div class={`particle particle-${i + 1}`} />
        ))
      }
    </div>

    <div class="hero-overlay">
      <div class="hero-content">
        <div class="logo-container">
          <h1 class="main-title">
            <span class="title-word" data-text="Valquirias">Valquirias</span>
            <span class="title-word" data-text="Estética">Estética</span>
          </h1>
          <div class="title-underline" aria-hidden="true"></div>
        </div>

        <p class="hero-subtitle">Realzá tu belleza con manos profesionales</p>

        <div class="buttons-container">
          <button
            class="cta-button primary"
            data-nav="/servicios"
            aria-label="Ver todos nuestros servicios de belleza"
          >
            <span class="button-text">Ver Servicios</span>
            <div class="button-bg" aria-hidden="true"></div>
            <div class="button-shine" aria-hidden="true"></div>
          </button>
          <button
            class="cta-button secondary"
            data-nav="/contacto"
            aria-label="Contactar con Valquirias Estética"
          >
            <span class="button-text">Contactar</span>
            <div class="button-bg" aria-hidden="true"></div>
            <div class="button-shine" aria-hidden="true"></div>
          </button>
        </div>

        <div class="decorative-elements" aria-hidden="true" role="presentation">
          <div class="floating-gem gem-1"></div>
          <div class="floating-gem gem-2"></div>
          <div class="floating-gem gem-3"></div>
        </div>
      </div>
    </div>

    <div class="loading-spinner" aria-hidden="true">
      <div class="spinner"></div>
    </div>
  </section>

  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #e96ee3 0%, #d4af37 100%);
      --text-gradient: linear-gradient(
        135deg,
        #e96ee3 0%,
        #d4af37 50%,
        #ffffff 100%
      );
      --shadow-primary: 0 8px 25px rgba(233, 110, 227, 0.4);
      --shadow-secondary: 0 8px 25px rgba(212, 175, 55, 0.2);
      --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
      --font-family: "Poppins", -apple-system, BlinkMacSystemFont, "Segoe UI",
        sans-serif;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html {
      scroll-behavior: smooth;
      height: 100%;
      height: 100dvh;
    }

    html,
    body {
      width: 100%;
      height: 100%;
      overflow-x: hidden;
      font-family: var(--font-family);
      background-color: #000;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      margin: 0;
      padding: 0;
      position: relative;
    }

    body::-webkit-scrollbar {
      display: none;
    }

    .hero {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100vw;
      height: 100vh;
      height: 100dvh;
      min-height: 100vh;
      min-height: 100dvh;
      display: flex;
      align-items: center;
      justify-content: center;
      contain: layout style paint;
      background: linear-gradient(
        135deg,
        #1a1a2e 0%,
        #16213e 25%,
        #0f3460 50%,
        #533483 75%,
        #16213e 100%
      );
      margin: 0;
      padding: 0;
    }

    .background-video {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      min-width: 100%;
      min-height: 100%;
      object-fit: cover;
      object-position: center;
      z-index: 1;
      filter: brightness(0.6) contrast(1.1) saturate(1.2);
      pointer-events: none;
      will-change: transform;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
      border: none;
      outline: none;
    }

    .loading-spinner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 2;
      opacity: 1;
      transition: opacity 0.5s ease;
    }

    .loading-spinner.hidden {
      opacity: 0;
      pointer-events: none;
    }

    .spinner {
      width: 40px;
      height: 40px;
      border: 3px solid rgba(233, 110, 227, 0.3);
      border-top: 3px solid #e96ee3;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

    .particles {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 2;
      pointer-events: none;
      contain: layout style paint;
    }

    .particle {
      position: absolute;
      width: 4px;
      height: 4px;
      background: var(--primary-gradient);
      border-radius: 50%;
      opacity: 0.6;
      will-change: transform;
      backface-visibility: hidden;
      animation: float 6s infinite ease-in-out;
    }

    .particle-1 {
      top: 20%;
      left: 10%;
      animation-delay: 0s;
      animation-duration: 8s;
    }

    .particle-2 {
      top: 60%;
      left: 80%;
      animation-delay: 1s;
      animation-duration: 6s;
    }

    .particle-3 {
      top: 30%;
      left: 70%;
      animation-delay: 2s;
      animation-duration: 7s;
    }

    .particle-4 {
      top: 80%;
      left: 20%;
      animation-delay: 3s;
      animation-duration: 9s;
    }

    .particle-5 {
      top: 10%;
      left: 50%;
      animation-delay: 4s;
      animation-duration: 5s;
    }

    .particle-6 {
      top: 70%;
      left: 60%;
      animation-delay: 5s;
      animation-duration: 8s;
    }

    @keyframes float {
      0%,
      100% {
        transform: translate3d(0, 0, 0) scale(1);
        opacity: 0.6;
      }
      50% {
        transform: translate3d(0, -20px, 0) scale(1.2);
        opacity: 1;
      }
    }

    .hero-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 3;
      background: linear-gradient(
        135deg,
        rgba(162, 92, 207, 0.3) 0%,
        rgba(233, 110, 227, 0.2) 30%,
        rgba(0, 0, 0, 0.4) 70%,
        rgba(0, 0, 0, 0.7) 100%
      );
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      will-change: transform;
      backface-visibility: hidden;
    }

    .hero-content {
      position: relative;
      z-index: 4;
      max-width: 800px;
      width: 100%;
      text-align: center;
      color: #ffffff;
      opacity: 0;
      transform: translateY(50px) scale(0.95);
      animation: heroEntrance 1.5s cubic-bezier(0.4, 0, 0.2, 1) 0.3s forwards;
    }

    .logo-container {
      margin-bottom: 2rem;
      position: relative;
    }

    .main-title {
      font-size: clamp(2.5rem, 8vw, 5rem);
      font-weight: 700;
      line-height: 0.9;
      margin-bottom: 1rem;
      position: relative;
      word-wrap: break-word;
      hyphens: auto;
    }

    .title-word {
      display: inline-block;
      background: var(--text-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      position: relative;
      will-change: transform;
      animation: titleGlow 3s ease-in-out infinite alternate;
      text-shadow: 0 0 30px rgba(233, 110, 227, 0.5);
      transition: var(--transition-smooth);
    }

    .title-word:nth-child(2) {
      animation-delay: 0.5s;
    }

    .title-word::before {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      background: linear-gradient(135deg, #ffffff 0%, #e96ee3 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: -1;
    }

    .title-word:hover::before {
      opacity: 1;
    }

    .title-underline {
      width: 0;
      height: 4px;
      background: linear-gradient(
        90deg,
        transparent,
        #e96ee3,
        #d4af37,
        transparent
      );
      margin: 1rem auto;
      border-radius: 2px;
      animation: underlineExpand 2s cubic-bezier(0.4, 0, 0.2, 1) 0.8s forwards;
    }

    @keyframes titleGlow {
      0% {
        filter: brightness(1) drop-shadow(0 0 10px rgba(233, 110, 227, 0.3));
        transform: scale(1);
      }
      100% {
        filter: brightness(1.2) drop-shadow(0 0 20px rgba(233, 110, 227, 0.6));
        transform: scale(1.02);
      }
    }

    @keyframes underlineExpand {
      0% {
        width: 0;
        opacity: 0;
      }
      100% {
        width: 120px;
        opacity: 1;
      }
    }

    .hero-subtitle {
      font-size: clamp(1.1rem, 3vw, 1.8rem);
      color: rgba(255, 255, 255, 0.9);
      margin-bottom: 3rem;
      line-height: 1.6;
      font-weight: 300;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
      opacity: 0;
      transform: translateY(30px);
      animation: fadeInUp 1s cubic-bezier(0.4, 0, 0.2, 1) 1.2s forwards;
      max-width: 90%;
      margin-left: auto;
      margin-right: auto;
    }

    .buttons-container {
      display: flex;
      gap: 1.5rem;
      justify-content: center;
      flex-wrap: wrap;
      margin-bottom: 2rem;
      opacity: 0;
      transform: translateY(30px);
      animation: fadeInUp 1s cubic-bezier(0.4, 0, 0.2, 1) 1.6s forwards;
    }

    .cta-button {
      position: relative;
      padding: 16px 32px;
      font-size: 1.1rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 1px;
      border: none;
      border-radius: 50px;
      cursor: pointer;
      overflow: hidden;
      transition: var(--transition-bounce);
      min-width: 160px;
      touch-action: manipulation;
      -webkit-tap-highlight-color: transparent;
      will-change: transform;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
    }

    .cta-button.primary {
      background: var(--primary-gradient);
      color: white;
      box-shadow: var(--shadow-primary);
    }

    .cta-button.secondary {
      background: transparent;
      color: #d4af37;
      border: 2px solid #d4af37;
      box-shadow: var(--shadow-secondary);
    }

    .button-text {
      position: relative;
      z-index: 2;
      transition: var(--transition-smooth);
    }

    .button-bg {
      position: absolute;
      inset: 0;
      background: linear-gradient(135deg, #d4af37, #e96ee3);
      opacity: 0;
      transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .button-shine {
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.3),
        transparent
      );
      transition: left 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .cta-button:hover {
      transform: translate3d(0, -3px, 0) scale(1.05);
      box-shadow: 0 15px 40px rgba(233, 110, 227, 0.6);
    }

    .cta-button:active {
      transform: translate3d(0, -1px, 0) scale(1.02);
      transition: var(--transition-smooth);
    }

    .cta-button.primary:hover .button-shine {
      left: 100%;
    }

    .cta-button.secondary:hover {
      color: white;
      box-shadow: 0 15px 40px rgba(212, 175, 55, 0.4);
    }

    .cta-button.secondary:hover .button-bg {
      opacity: 1;
    }

    .decorative-elements {
      position: absolute;
      inset: 0;
      pointer-events: none;
      contain: layout style paint;
    }

    .floating-gem {
      position: absolute;
      width: 8px;
      height: 8px;
      background: var(--primary-gradient);
      border-radius: 50%;
      will-change: transform;
      backface-visibility: hidden;
      animation: gemFloat 4s infinite cubic-bezier(0.4, 0, 0.6, 1);
    }

    .gem-1 {
      top: -20px;
      left: 20%;
      animation-delay: 0s;
    }

    .gem-2 {
      top: 50%;
      right: -30px;
      animation-delay: 1s;
    }

    .gem-3 {
      bottom: -20px;
      left: 70%;
      animation-delay: 2s;
    }

    @keyframes gemFloat {
      0%,
      100% {
        transform: translate3d(0, 0, 0) rotate(0deg) scale(1);
        opacity: 0.6;
      }
      50% {
        transform: translate3d(0, -15px, 0) rotate(180deg) scale(1.2);
        opacity: 1;
      }
    }

    @keyframes heroEntrance {
      0% {
        opacity: 0;
        transform: translateY(50px) scale(0.95);
      }
      100% {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    @keyframes fadeInUp {
      0% {
        opacity: 0;
        transform: translateY(30px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 1024px) {
      .buttons-container {
        gap: 1rem;
      }

      .cta-button {
        padding: 14px 28px;
        font-size: 1rem;
        min-width: 140px;
      }

      .hero-overlay {
        padding: 1.5rem;
      }
    }

    @media (max-width: 768px) {
      .hero {
        position: fixed;
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        min-height: 100vh;
        min-height: 100dvh;
      }

      .hero-overlay {
        padding: env(safe-area-inset-top, 1rem)
          env(safe-area-inset-right, 1.5rem) env(safe-area-inset-bottom, 1rem)
          env(safe-area-inset-left, 1.5rem);
      }

      .hero-subtitle {
        margin-bottom: 2.5rem;
      }

      .buttons-container {
        flex-direction: column;
        align-items: center;
        gap: 1rem;
      }

      .cta-button {
        width: 100%;
        max-width: 280px;
        padding: 16px 24px;
      }

      .title-underline {
        animation-delay: 0.6s;
      }

      .main-title {
        line-height: 1.1;
      }

      .background-video {
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        min-width: 100vw;
        min-height: 100vh;
        min-height: 100dvh;
        object-fit: cover;
        object-position: center;
        left: 0;
        top: 0;
      }
    }

    @media (max-width: 480px) {
      .hero {
        position: fixed;
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        min-height: 100vh;
        min-height: 100dvh;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
      }

      .hero-overlay {
        padding: env(safe-area-inset-top, 1rem) env(safe-area-inset-right, 1rem)
          env(safe-area-inset-bottom, 1rem) env(safe-area-inset-left, 1rem);
      }

      .hero-content {
        padding: 0 0.5rem;
      }

      .main-title {
        font-size: clamp(2rem, 10vw, 3rem);
        margin-bottom: 1.5rem;
      }

      .hero-subtitle {
        font-size: clamp(1rem, 4vw, 1.3rem);
        margin-bottom: 2rem;
        max-width: 95%;
      }

      .cta-button {
        padding: 14px 20px;
        font-size: 0.95rem;
        min-width: 200px;
      }

      .buttons-container {
        gap: 0.8rem;
      }

      .background-video {
        position: absolute;
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        min-width: 100vw;
        min-height: 100vh;
        min-height: 100dvh;
        object-fit: cover;
        object-position: center;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
        transform: none;
      }
    }

    @media (max-width: 360px) {
      .hero {
        position: fixed;
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        min-height: 100vh;
        min-height: 100dvh;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
        margin: 0;
        padding: 0;
      }

      .hero-overlay {
        padding: env(safe-area-inset-top, 0.8rem)
          env(safe-area-inset-right, 0.8rem) env(safe-area-inset-bottom, 0.8rem)
          env(safe-area-inset-left, 0.8rem);
      }

      .main-title {
        font-size: clamp(1.8rem, 12vw, 2.5rem);
      }

      .hero-subtitle {
        font-size: clamp(0.9rem, 5vw, 1.2rem);
      }

      .cta-button {
        min-width: 180px;
        padding: 12px 18px;
        font-size: 0.9rem;
      }

      .background-video {
        position: fixed;
        width: 100vw;
        height: 100vh;
        height: 100dvh;
        min-width: 100vw;
        min-height: 100vh;
        min-height: 100dvh;
        object-fit: cover;
        object-position: center;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
        transform: none;
        margin: 0;
        padding: 0;
      }
    }

    @media (hover: none) and (pointer: coarse) {
      .cta-button:active {
        transform: translate3d(0, 0, 0) scale(0.98);
        transition: transform 0.1s ease;
      }

      .cta-button:hover {
        transform: none;
        box-shadow: var(--shadow-primary);
      }

      .title-word:hover::before {
        opacity: 0;
      }
    }

    @media (prefers-reduced-motion: reduce) {
      .particle,
      .floating-gem,
      .title-word,
      .hero-content,
      .hero-subtitle,
      .buttons-container,
      .title-underline {
        animation: none !important;
      }

      .hero-content {
        opacity: 1;
        transform: none;
      }

      .hero-subtitle,
      .buttons-container {
        opacity: 1;
        transform: none;
      }

      .title-underline {
        width: 120px;
        opacity: 1;
      }

      .cta-button {
        transition: none !important;
      }

      .background-video {
        display: none;
      }

      .hero::before {
        content: "";
        position: absolute;
        inset: 0;
        background: linear-gradient(135deg, #1a1a2e, #16213e);
        z-index: 1;
      }
    }

    @media (prefers-contrast: high) {
      .hero-overlay {
        background: rgba(0, 0, 0, 0.9);
      }

      .title-word {
        -webkit-text-fill-color: white;
        color: white;
      }

      .cta-button.secondary {
        border-color: white;
        color: white;
      }

      .particle {
        background: white;
      }

      .floating-gem {
        background: white;
      }
    }

    @supports (height: 100dvh) {
      .hero {
        height: 100dvh;
        min-height: 100dvh;
      }

      .background-video {
        height: 100dvh;
        min-height: 100dvh;
      }
    }

    @supports (padding: env(safe-area-inset-top)) {
      .hero-overlay {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
      }
    }

    .hero * {
      backface-visibility: hidden;
      perspective: 1000px;
    }
  </style>

  <script>
    interface NavigatorWithConnection extends Navigator {
      connection?: {
        effectiveType: string;
        rtt: number;
        downlink: number;
      };
      deviceMemory?: number;
      getBattery?: () => Promise<{
        level: number;
        charging: boolean;
      }>;
    }

    class HeroController {
      isScrolling: boolean;
      resizeTimer: number | null;

      constructor() {
        this.isScrolling = false;
        this.resizeTimer = null;
        this.init();
      }

      init(): void {
        this.setupEventListeners();
        this.setupIntersectionObserver();
        this.optimizeVideo();
        this.setupViewportHeight();
        this.hideLoadingSpinner();
        this.optimizePerformance();
        this.fixMobileViewport();
      }

      setupEventListeners(): void {
        document.addEventListener("click", this.handleNavigation.bind(this), {
          passive: true,
        });
        window.addEventListener("scroll", this.throttledScroll.bind(this), {
          passive: true,
        });
        window.addEventListener("resize", this.debouncedResize.bind(this), {
          passive: true,
        });
        window.addEventListener(
          "orientationchange",
          this.handleOrientationChange.bind(this),
          { passive: true }
        );
        this.setupTouchEvents();
      }

      handleNavigation(e: MouseEvent): void {
        const target = e.target as Element;
        const button = target.closest<HTMLButtonElement>(".cta-button");
        if (!button) return;

        e.preventDefault();
        const targetUrl = button.dataset.nav;

        if (targetUrl) {
          const link = document.createElement("link");
          link.rel = "prefetch";
          link.href = targetUrl;
          document.head.appendChild(link);

          button.style.transform = "scale(0.95)";
          setTimeout(() => {
            window.location.href = targetUrl;
          }, 150);
        }
      }

      throttledScroll(): void {
        if (this.isScrolling) return;

        this.isScrolling = true;
        requestAnimationFrame(() => {
          this.handleScroll();
          this.isScrolling = false;
        });
      }

      handleScroll(): void {
        const scrolled = window.pageYOffset;

        const video =
          document.querySelector<HTMLVideoElement>(".background-video");
        const overlay = document.querySelector<HTMLElement>(".hero-overlay");

        if (video && overlay) {
          const parallaxSpeed = 0.5;
          const overlaySpeed = 0.3;
          video.style.transform = `translate3d(0, ${scrolled * parallaxSpeed}px, 0)`;
          overlay.style.transform = `translate3d(0, ${scrolled * overlaySpeed}px, 0)`;
        }
      }

      debouncedResize(): void {
        if (this.resizeTimer) {
          clearTimeout(this.resizeTimer);
        }
        this.resizeTimer = window.setTimeout(() => {
          this.setupViewportHeight();
          this.fixMobileViewport();
        }, 250);
      }

      handleOrientationChange(): void {
        setTimeout(() => {
          this.setupViewportHeight();
          this.fixMobileViewport();
        }, 100);
      }

      setupViewportHeight(): void {
        const vh = window.innerHeight * 0.01;
        const vw = window.innerWidth * 0.01;
        document.documentElement.style.setProperty("--vh", `${vh}px`);
        document.documentElement.style.setProperty("--vw", `${vw}px`);
      }

      fixMobileViewport(): void {
        const hero = document.querySelector<HTMLElement>(".hero");
        const video =
          document.querySelector<HTMLVideoElement>(".background-video");

        if (hero && video) {
          const actualHeight = window.innerHeight;
          const actualWidth = window.innerWidth;

          hero.style.width = `${actualWidth}px`;
          hero.style.height = `${actualHeight}px`;
          hero.style.left = "0";
          hero.style.top = "0";
          hero.style.right = "0";
          hero.style.bottom = "0";

          video.style.width = `${actualWidth}px`;
          video.style.height = `${actualHeight}px`;
          video.style.left = "0";
          video.style.top = "0";
        }
      }

      setupTouchEvents(): void {
        const buttons =
          document.querySelectorAll<HTMLButtonElement>(".cta-button");
        const titleWords =
          document.querySelectorAll<HTMLElement>(".title-word");

        buttons.forEach((button) => {
          button.addEventListener(
            "touchstart",
            () => {
              button.style.transform = "scale(0.98)";
            },
            { passive: true }
          );
          button.addEventListener(
            "touchend",
            () => {
              button.style.transform = "";
            },
            { passive: true }
          );
        });

        titleWords.forEach((word) => {
          word.addEventListener(
            "touchstart",
            () => {
              word.style.animation = "titleGlow 0.5s ease-out";
            },
            { passive: true }
          );
        });
      }

      optimizeVideo(): void {
        const video =
          document.querySelector<HTMLVideoElement>(".background-video");
        if (!video) return;

        video.preload = "metadata";
        video.crossOrigin = "anonymous";

        video.addEventListener("loadedmetadata", () => {
          video.currentTime = 0;
          this.fixMobileViewport();
        });

        video.addEventListener("canplay", () => {
          video.play().catch(() => {
            console.log("Autoplay prevented");
          });
        });

        const nav = navigator as NavigatorWithConnection;
        if (nav.connection) {
          const { effectiveType } = nav.connection;
          if (effectiveType === "slow-2g" || effectiveType === "2g") {
            video.style.display = "none";
            this.addFallbackBackground();
          }
        }
      }

      addFallbackBackground(): void {
        const hero = document.querySelector<HTMLElement>(".hero");
        if (hero) {
          hero.style.background =
            "linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)";
        }
      }

      setupIntersectionObserver(): void {
        const observerOptions: IntersectionObserverInit = {
          root: null,
          rootMargin: "0px",
          threshold: 0.1,
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              this.startAnimations();
              observer.unobserve(entry.target);
            }
          });
        }, observerOptions);

        const heroContent = document.querySelector(".hero-content");
        if (heroContent) {
          observer.observe(heroContent);
        }
      }

      startAnimations(): void {
        const elementsToAnimate = [
          { selector: ".hero-content", delay: 0 },
          { selector: ".hero-subtitle", delay: 400 },
          { selector: ".buttons-container", delay: 800 },
          { selector: ".title-underline", delay: 600 },
        ];

        elementsToAnimate.forEach(({ selector, delay }) => {
          setTimeout(() => {
            const element = document.querySelector<HTMLElement>(selector);
            if (element) {
              element.style.animationPlayState = "running";
            }
          }, delay);
        });
      }

      hideLoadingSpinner(): void {
        const spinner = document.querySelector<HTMLElement>(".loading-spinner");
        const video =
          document.querySelector<HTMLVideoElement>(".background-video");

        if (spinner && video) {
          const hideSpinner = () => {
            spinner.classList.add("hidden");
            setTimeout(() => {
              if (spinner) spinner.style.display = "none";
            }, 500);
          };

          if (video.readyState >= 3) {
            setTimeout(hideSpinner, 800);
          } else {
            video.addEventListener("canplay", () =>
              setTimeout(hideSpinner, 800)
            );
          }
        }
      }

      optimizePerformance(): void {
        const nav = navigator as NavigatorWithConnection;

        if (nav.getBattery) {
          nav.getBattery().then((battery) => {
            if (battery.level < 0.2) {
              document.documentElement.classList.add("low-battery");
            }
          });
        }

        if (nav.deviceMemory && nav.deviceMemory < 4) {
          document.documentElement.classList.add("low-performance");
        }
      }

      destroy(): void {
        window.removeEventListener("scroll", this.throttledScroll.bind(this));
        window.removeEventListener("resize", this.debouncedResize.bind(this));
        window.removeEventListener(
          "orientationchange",
          this.handleOrientationChange.bind(this)
        );
        document.removeEventListener("click", this.handleNavigation.bind(this));

        if (this.resizeTimer) {
          clearTimeout(this.resizeTimer);
        }
      }
    }

    let heroController: HeroController | undefined;

    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", () => {
        heroController = new HeroController();
      });
    } else {
      heroController = new HeroController();
    }

    window.addEventListener("beforeunload", () => {
      if (heroController) {
        heroController.destroy();
      }
    });

    window.addEventListener("load", () => {
      if (heroController) {
        heroController.fixMobileViewport();
      }
    });

    if ("IntersectionObserver" in window) {
      const imageObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const img = entry.target as HTMLImageElement;
            if (img.dataset.src) {
              img.src = img.dataset.src;
            }
            img.classList.remove("lazy");
            imageObserver.unobserve(img);
          }
        });
      });

      document
        .querySelectorAll<HTMLImageElement>("img[data-src]")
        .forEach((img) => {
          imageObserver.observe(img);
        });
    }

    document.addEventListener(
      "error",
      (e) => {
        const target = e.target as HTMLElement;
        if (target.tagName === "VIDEO") {
          console.log("Video error, using fallback");
          const hero = document.querySelector<HTMLElement>(".hero");
          if (hero) {
            hero.style.background =
              "linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)";
          }
        }
      },
      true
    );
  </script>

  <style>
    .low-performance .particle,
    .low-performance .floating-gem,
    .low-performance .title-word {
      animation-duration: 8s !important;
    }

    .low-battery .particle,
    .low-battery .floating-gem {
      animation: none !important;
    }

    img.lazy {
      opacity: 0;
      transition: opacity 0.3s;
    }

    img.lazy.loaded {
      opacity: 1;
    }

    .hero *,
    .hero *::before,
    .hero *::after {
      will-change: auto;
    }

    .hero .particle,
    .hero .floating-gem,
    .hero .background-video {
      will-change: transform;
    }

    .hero .cta-button {
      will-change: transform, box-shadow;
    }

    .hero-content {
      contain: layout style paint;
    }

    .background-video,
    .particle,
    .floating-gem,
    .cta-button,
    .title-word {
      transform: translate3d(0, 0, 0);
      backface-visibility: hidden;
      perspective: 1000px;
    }

    .hero-overlay {
      isolation: isolate;
    }

    .hero {
      isolation: isolate;
      contain: layout style paint;
    }
  </style>
</HeroLayout>
